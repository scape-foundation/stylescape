// ============================================================================
// Poster
// ============================================================================

////
/// 
/// Case Character Typography Mixins Module
/// ===========================================================================
/// 
/// @group Character
/// @author Scape Agency
/// @link https://scape.style
/// @since 0.1.0 initial release
/// @todo None
/// @access public
/// 
////


// ============================================================================
// Use
// ============================================================================

@use "../../dev" as *;
@use "../../variables" as *;
@use "../../mixins" as *;

@use "../font/font_default" as *;
@use "../font/font_weight" as *;
@use "../font/font_size" as *;

@use "default" as *;
@use "normal" as *;


// ============================================================================
// Mixins
// ============================================================================


// ============================================================================
// Typography | Character | Case
// ============================================================================
// Provides flexible and reusable mixins for character case styling.




// Placeholder selectors for font-variant-caps styles
%font-variant-small-caps { font-variant-caps: small-caps; }
%font-variant-all-small-caps { font-variant-caps: all-small-caps; }
%font-variant-petite-caps { font-variant-caps: petite-caps; }
%font-variant-all-petite-caps { font-variant-caps: all-petite-caps; }
%font-variant-unicase { font-variant-caps: unicase; }
%font-variant-titling-caps { font-variant-caps: titling-caps; }

// Placeholder selectors for text transformation styles
%text-transform-uppercase { text-transform: uppercase; }
%text-transform-lowercase { text-transform: lowercase; }
%text-transform-capitalize { text-transform: capitalize; }


// ============================================================================

// Mixin for setting font-variant-caps
// ----------------------------------------------------------------------------

/// 
/// Mixin for setting font-variant-caps.
/// ---------------------------------------------------------------------------
/// 
/// @param {String} $style - The font variant style, accepts: 
/// normal | small-caps | all-small-caps | petite-caps | 
/// all-petite-caps | unicase | titling-caps | initial | inherit | unset.
/// 
@mixin font_variant_caps($style: normal) {
    font-variant-caps: $style;
}

// Generic mixin for text transformation
// ----------------------------------------------------------------------------

///
/// Mixin for text transformation styles.
/// ---------------------------------------------------------------------------
/// 
/// @param {String} $transform - The text transformation style, accepts:
/// uppercase | lowercase | capitalize | none.
///
@mixin text_transform($transform: none) {
    text-transform: $transform;
}

///
/// Combined mixin for character styling.
/// ---------------------------------------------------------------------------
/// 
/// Allows setting both text-transform and font-variant-caps in a single mixin.
/// 
/// @param {String} $transform - Optional text-transform style.
/// @param {String} $font-variant - Optional font-variant-caps style.
/// 
@mixin character_style($transform: null, $font-variant: null) {
    @if $transform != null {
        text-transform: $transform;
    }

    @if $font-variant != null {
        font-variant-caps: $font-variant;
    }
}

// ============================================================================

/// Mixin for applying small-caps font variant.
@mixin character_smallcaps {
    @include font_variant_caps(small-caps);
}

/// Mixin for applying all-small-caps font variant.
@mixin character_smallcaps_all {
    @include font_variant_caps(all-small-caps);
}

/// Mixin for applying petite-caps font variant.
@mixin character_petite_caps {
    @include font_variant_caps(petite-caps);
}

/// Mixin for applying all-petite-caps font variant.
@mixin character_all_petite_caps {
    @include font_variant_caps(all-petite-caps);
}

/// Mixin for applying unicase font variant.
@mixin character_unicase {
    @include font_variant_caps(unicase);
}

/// Mixin for applying titling-caps font variant.
@mixin character_titling_caps {
    @include font_variant_caps(titling-caps);
}

/// Mixin for applying uppercase text transformation.
@mixin character_uppercase {
    @include text_transform(uppercase);
}

/// Mixin for applying lowercase text transformation.
@mixin character_lowercase {
    @include text_transform(lowercase);
}

/// Mixin for applying capitalize text transformation.
@mixin character_capitalize {
    @include text_transform(capitalize);
}

/// Mixin for resetting text transformation and font variant to initial values.
@mixin character_initial {
    @include font_variant_caps(initial);
    @include text_transform(none);
}

/// Mixin for inheriting text transformation and font variant from parent.
@mixin character_inherit {
    @include font_variant_caps(inherit);
    // @include text_transform(inherit);
}

/// Mixin for unsetting text transformation and font variant.
@mixin character_unset {
    @include font_variant_caps(unset);
    @include text_transform(none);
}





// Utility classes using the improved mixins
// ============================================================================

.character_smallcaps { @include character_smallcaps; }
.character_smallcaps_all { @include character_smallcaps_all; }
.character_petite_caps { @include character_petite_caps; }
.character_all_petite_caps { @include character_all_petite_caps; }
.character_unicase { @include character_unicase; }
.character_titling_caps { @include character_titling_caps; }

.character_uppercase { @include character_uppercase; }
.character_lowercase { @include character_lowercase; }
.character_capitalize { @include character_capitalize; }

.character_initial { @include character_initial; }
.character_inherit { @include character_inherit; }
.character_unset { @include character_unset; }

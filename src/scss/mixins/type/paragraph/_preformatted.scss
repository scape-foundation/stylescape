////
/// 
/// Preformatted Paragraph Typography Mixins Module
/// ===========================================================================
///
/// Provides a set of mixins to style preformatted text elements such as `<pre>`, 
/// `<code>`, and `<kbd>`, ensuring that they stand out with distinct typography 
/// and spacing. This module enhances the readability and visual presentation 
/// of code snippets and keyboard inputs.
///
/// ### Key Features
/// - Distinct styling for inline code, keyboard inputs, and preformatted blocks.
/// - Consistent use of monospace fonts for technical text.
/// - Customizable padding, margins, and colors for enhanced readability and accessibility.
///
/// @group Paragraph
/// @author Scape Agency
/// @link https://scape.style
/// @since 0.1.0 initial release
/// @todo None
/// @access public
/// 
////


// ============================================================================
// Use
// ============================================================================

@use "../../../variables" as *;
// @use "../../mixins" as *;

@use "../character" as *;
@use "../font" as *;

@use "default" as *;


// ============================================================================
// Mixins
// ============================================================================


///
/// Mixin for Preformatted Text Blocks
/// ===========================================================================
/// Styles preformatted text blocks (`<pre>`), ensuring that code snippets and 
/// other preformatted content are visually distinct and easy to read.
///
/// ### Features:
/// - Monospace fonts for technical content.
/// - Scrollable overflow handling.
/// - Consistent padding and margins for spacing.
/// - Background color to set preformatted blocks apart from other content.
///
/// @param {List} $font_stack - Monospace font stack for preformatted text. 
///        Default is `$font_stack_monospace`.
/// @param {Length} $max_width - Maximum width for preformatted blocks. 
///        Default is `$paragraph_code_max_width`.
/// @param {List} $margin - Margin around preformatted blocks. Default is 
///        `$paragraph_code_margin`.
/// @param {List} $padding - Padding inside preformatted blocks. Default is 
///        `$paragraph_code_padding`.
/// @param {Color} $bg_color - Background color for preformatted blocks. 
///        Default is `$paragraph_code_bg_color`.
/// @param {Color} $text_color - Text color for preformatted text. Default is 
///        `$paragraph_code_text_color`.
/// @param {Number} $tab_size - Tab size setting for preformatted text. 
///        Default is `$paragraph_code_tab_size`.
/// @param {Color} $border_color - Border color for the `<pre>` element 
///        (default: `$paragraph_code_border_color`).
/// @param {Length} $border_radius - Border radius for the `<pre>` element
///        (default: `$paragraph_code_border_radius`).
/// 
///
@mixin paragraph_code(
    $font_stack: $font_stack_monospace,
    $max_width: $paragraph_code_max_width,
    $margin: $paragraph_code_margin,
    $padding: $paragraph_code_padding,
    $bg_color: $paragraph_code_bg_color,
    $text_color: $paragraph_code_text_color,
    $tab_size: $paragraph_code_tab_size,
    $border_color: $paragraph_code_border_color,
    $border_thickness: $paragraph_code_border_thickness,
    $border_type: $paragraph_code_border_type,
    $border_radius: $paragraph_code_border_radius,
) {
    // @include monospace-font;
    font-family: $font_stack;

    clear: both; // Clear floats to ensure block-level formatting
    overflow: auto; // Enable scrolling for overflowing content
    
    max-width: $max_width;
    margin: $margin;
    padding: $padding;

    white-space: pre-wrap; // Preserve whitespace and wrap lines
    word-wrap: break-word; // Break long words in <pre>

    -moz-tab-size: $tab_size; // Set tab size for Firefox
    -o-tab-size: $tab_size; // Set tab size for Opera
    tab-size: $tab_size; // Set tab size for other browsers

    color: $text_color;
    background-color: $bg_color;

    border: $border_thickness $border_type $border_color;
    border-radius: $border_radius;
}
